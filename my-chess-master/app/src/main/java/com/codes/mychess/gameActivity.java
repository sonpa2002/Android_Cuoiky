package com.codes.mychess;

import static com.codes.mychess.isValidTurn.*;
import static com.codes.mychess.storage.*;
import static com.codes.mychess.turnMethods.*;

import android.content.Intent;
import android.graphics.Color;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.appcompat.app.ActionBar;
import androidx.appcompat.app.AppCompatActivity;

public class gameActivity extends AppCompatActivity {

    ActionBar aB;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // sets content view to the game activity
        setContentView(R.layout.activity_game);

        aB = getSupportActionBar();

        // hiding the action bar
        try {
            this.getSupportActionBar().hide();
        } catch (NullPointerException e) {
        }

        // displays the names that the users have chosen for them
        TextView name_black = findViewById(R.id.name_black);
        name_black.setText(playerBlack);

        TextView name_white = findViewById(R.id.name_white);
        name_white.setText(playerWhite);

        // resets some values in storage
        playersTurn = "white";
        selectedField = "";
        selectionStage = 0;
        turns = 0;

        // gets all the buttons by names so I can change their attributes later
        final Button b00 = findViewById(R.id.b00);
        final Button b01 = findViewById(R.id.b01);
        final Button b02 = findViewById(R.id.b02);
        final Button b03 = findViewById(R.id.b03);
        final Button b04 = findViewById(R.id.b04);
        final Button b05 = findViewById(R.id.b05);
        final Button b06 = findViewById(R.id.b06);
        final Button b07 = findViewById(R.id.b07);
        final Button b10 = findViewById(R.id.b10);
        final Button b11 = findViewById(R.id.b11);
        final Button b12 = findViewById(R.id.b12);
        final Button b13 = findViewById(R.id.b13);
        final Button b14 = findViewById(R.id.b14);
        final Button b15 = findViewById(R.id.b15);
        final Button b16 = findViewById(R.id.b16);
        final Button b17 = findViewById(R.id.b17);
        final Button b20 = findViewById(R.id.b20);
        final Button b21 = findViewById(R.id.b21);
        final Button b22 = findViewById(R.id.b22);
        final Button b23 = findViewById(R.id.b23);
        final Button b24 = findViewById(R.id.b24);
        final Button b25 = findViewById(R.id.b25);
        final Button b26 = findViewById(R.id.b26);
        final Button b27 = findViewById(R.id.b27);
        final Button b30 = findViewById(R.id.b30);
        final Button b31 = findViewById(R.id.b31);
        final Button b32 = findViewById(R.id.b32);
        final Button b33 = findViewById(R.id.b33);
        final Button b34 = findViewById(R.id.b34);
        final Button b35 = findViewById(R.id.b35);
        final Button b36 = findViewById(R.id.b36);
        final Button b37 = findViewById(R.id.b37);
        final Button b40 = findViewById(R.id.b40);
        final Button b41 = findViewById(R.id.b41);
        final Button b42 = findViewById(R.id.b42);
        final Button b43 = findViewById(R.id.b43);
        final Button b44 = findViewById(R.id.b44);
        final Button b45 = findViewById(R.id.b45);
        final Button b46 = findViewById(R.id.b46);
        final Button b47 = findViewById(R.id.b47);
        final Button b50 = findViewById(R.id.b50);
        final Button b51 = findViewById(R.id.b51);
        final Button b52 = findViewById(R.id.b52);
        final Button b53 = findViewById(R.id.b53);
        final Button b54 = findViewById(R.id.b54);
        final Button b55 = findViewById(R.id.b55);
        final Button b56 = findViewById(R.id.b56);
        final Button b57 = findViewById(R.id.b57);
        final Button b60 = findViewById(R.id.b60);
        final Button b61 = findViewById(R.id.b61);
        final Button b62 = findViewById(R.id.b62);
        final Button b63 = findViewById(R.id.b63);
        final Button b64 = findViewById(R.id.b64);
        final Button b65 = findViewById(R.id.b65);
        final Button b66 = findViewById(R.id.b66);
        final Button b67 = findViewById(R.id.b67);
        final Button b70 = findViewById(R.id.b70);
        final Button b71 = findViewById(R.id.b71);
        final Button b72 = findViewById(R.id.b72);
        final Button b73 = findViewById(R.id.b73);
        final Button b74 = findViewById(R.id.b74);
        final Button b75 = findViewById(R.id.b75);
        final Button b76 = findViewById(R.id.b76);
        final Button b77 = findViewById(R.id.b77);

        final ImageView rook_black1 = findViewById(R.id.rook_black1);
        final ImageView knight_black1 = findViewById(R.id.knight_black1);
        final ImageView bishop_black1 = findViewById(R.id.bishop_black1);
        final ImageView queen_black = findViewById(R.id.queen_black);
        final ImageView king_black = findViewById(R.id.king_black);
        final ImageView bishop_black2 = findViewById(R.id.bishop_black2);
        final ImageView knight_black2 = findViewById(R.id.knight_black2);
        final ImageView rook_black2 = findViewById(R.id.rook_black2);
        final ImageView pawn_black1 = findViewById(R.id.pawn_black1);
        final ImageView pawn_black2 = findViewById(R.id.pawn_black2);
        final ImageView pawn_black3 = findViewById(R.id.pawn_black3);
        final ImageView pawn_black4 = findViewById(R.id.pawn_black4);
        final ImageView pawn_black5 = findViewById(R.id.pawn_black5);
        final ImageView pawn_black6 = findViewById(R.id.pawn_black6);
        final ImageView pawn_black7 = findViewById(R.id.pawn_black7);
        final ImageView pawn_black8 = findViewById(R.id.pawn_black8);
        final ImageView pawn_white1 = findViewById(R.id.pawn_white1);
        final ImageView pawn_white2 = findViewById(R.id.pawn_white2);
        final ImageView pawn_white3 = findViewById(R.id.pawn_white3);
        final ImageView pawn_white4 = findViewById(R.id.pawn_white4);
        final ImageView pawn_white5 = findViewById(R.id.pawn_white5);
        final ImageView pawn_white6 = findViewById(R.id.pawn_white6);
        final ImageView pawn_white7 = findViewById(R.id.pawn_white7);
        final ImageView pawn_white8 = findViewById(R.id.pawn_white8);
        final ImageView rook_white1 = findViewById(R.id.rook_white1);
        final ImageView knight_white1 = findViewById(R.id.knight_white1);
        final ImageView bishop_white1 = findViewById(R.id.bishop_white1);
        final ImageView queen_white = findViewById(R.id.queen_white);
        final ImageView king_white = findViewById(R.id.king_white);
        final ImageView bishop_white2 = findViewById(R.id.bishop_white2);
        final ImageView knight_white2 = findViewById(R.id.knight_white2);
        final ImageView rook_white2 = findViewById(R.id.rook_white2);
        
        final ImageView error_message = findViewById(R.id.error_message);

        final ImageView win_white = findViewById(R.id.winner_white);
        final ImageView win_black = findViewById(R.id.winner_black);

        win_white.setVisibility(View.INVISIBLE);
        win_black.setVisibility(View.INVISIBLE);

        b00.setClickable(true);
        b01.setClickable(true);
        b02.setClickable(true);
        b03.setClickable(true);
        b04.setClickable(true);
        b05.setClickable(true);
        b06.setClickable(true);
        b07.setClickable(true);
        b10.setClickable(true);
        b11.setClickable(true);
        b12.setClickable(true);
        b13.setClickable(true);
        b14.setClickable(true);
        b15.setClickable(true);
        b16.setClickable(true);
        b17.setClickable(true);
        b20.setClickable(true);
        b21.setClickable(true);
        b22.setClickable(true);
        b23.setClickable(true);
        b24.setClickable(true);
        b25.setClickable(true);
        b26.setClickable(true);
        b27.setClickable(true);
        b30.setClickable(true);
        b31.setClickable(true);
        b32.setClickable(true);
        b33.setClickable(true);
        b34.setClickable(true);
        b35.setClickable(true);
        b36.setClickable(true);
        b37.setClickable(true);
        b40.setClickable(true);
        b41.setClickable(true);
        b42.setClickable(true);
        b43.setClickable(true);
        b44.setClickable(true);
        b45.setClickable(true);
        b46.setClickable(true);
        b47.setClickable(true);
        b50.setClickable(true);
        b51.setClickable(true);
        b52.setClickable(true);
        b53.setClickable(true);
        b54.setClickable(true);
        b55.setClickable(true);
        b56.setClickable(true);
        b57.setClickable(true);
        b60.setClickable(true);
        b61.setClickable(true);
        b62.setClickable(true);
        b63.setClickable(true);
        b64.setClickable(true);
        b65.setClickable(true);
        b66.setClickable(true);
        b67.setClickable(true);
        b70.setClickable(true);
        b71.setClickable(true);
        b72.setClickable(true);
        b73.setClickable(true);
        b74.setClickable(true);
        b75.setClickable(true);
        b76.setClickable(true);
        b77.setClickable(true);

        b00.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[0][0];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();
                        
                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b01.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[0][1];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b02.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[0][2];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b03.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[0][3];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b04.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[0][4];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b05.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[0][5];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b06.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[0][6];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b07.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[0][7];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b10.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[1][0];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b11.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[1][1];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b12.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[1][2];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b13.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[1][3];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b14.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[1][4];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b15.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[1][5];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b16.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[1][6];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b17.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[1][7];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b20.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[2][0];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b21.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[2][1];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b22.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[2][2];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b23.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[2][3];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b24.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[2][4];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b25.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[2][5];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b26.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[2][6];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b27.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[2][7];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b30.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[3][0];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b31.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[3][1];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b32.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[3][2];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b33.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[3][3];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b34.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[3][4];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b35.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[3][5];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b36.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[3][6];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b37.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[3][7];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b40.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[4][0];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b41.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[4][1];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b42.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[4][2];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b43.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[4][3];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b44.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[4][4];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b45.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[4][5];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b46.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[4][6];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b47.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[4][7];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b50.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[5][0];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b51.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[5][1];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b52.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[5][2];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b53.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[5][3];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b54.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[5][4];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b55.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[5][5];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b56.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[5][6];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b57.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[5][7];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b60.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[6][0];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b61.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[6][1];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b62.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[6][2];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b63.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[6][3];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b64.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[6][4];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b65.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[6][5];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b66.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[6][6];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b67.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[6][7];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b70.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[7][0];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b71.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[7][1];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b72.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[7][2];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b73.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[7][3];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b74.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[7][4];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b75.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[7][5];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b76.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[7][6];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

        b77.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // make the error message from the previous move invisible again
                error_message.setVisibility(View.INVISIBLE);

                // get name of the chess figure or field clicked
                String nameOfField = chessboard[7][7];

                // if the player only wants to select a figure
                if (selectionStage == 0 && validSelection(nameOfField)) {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // or when he wants to set the destination of his selected figure
                else if (selectionStage == 1 && validDestination(nameOfField)) {
                    // checks whether an enemy was hit and removes its image if necessary
                    if (enemyHit(nameOfField)) {

                        int row, column;
                        boolean breaking = false;
                        row = 0;
                        column = 0;

                        for (int i = 0; i < chessboard.length; i++) {
                            for (int j = 0; j < chessboard.length; j++) {
                                if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                    row = i;
                                    column = j;
                                    breaking = true;
                                    break;
                                }
                            }
                            if (breaking)
                                break;
                        }

                        if (chessboard[row][column].equalsIgnoreCase("rook_black1")) {
                            rook_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black1")) {
                            knight_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black1")) {
                            bishop_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_black")) {
                            queen_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_black")) {
                            king_black.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_black2")) {
                            bishop_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_black2")) {
                            knight_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_black2")) {
                            rook_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black1")) {
                            pawn_black1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black2")) {
                            pawn_black2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black3")) {
                            pawn_black3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black4")) {
                            pawn_black4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black5")) {
                            pawn_black5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black6")) {
                            pawn_black6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black7")) {
                            pawn_black7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_black8")) {
                            pawn_black8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white1")) {
                            pawn_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white2")) {
                            pawn_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white3")) {
                            pawn_white3.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white4")) {
                            pawn_white4.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white5")) {
                            pawn_white5.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white6")) {
                            pawn_white6.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white7")) {
                            pawn_white7.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("pawn_white8")) {
                            pawn_white8.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white1")) {
                            rook_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white1")) {
                            knight_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white1")) {
                            bishop_white1.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("queen_white")) {
                            queen_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("king_white")) {
                            king_white.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("bishop_white2")) {
                            bishop_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("knight_white2")) {
                            knight_white2.setVisibility(View.GONE);
                        } else if (chessboard[row][column].equalsIgnoreCase("rook_white2")) {
                            rook_white2.setVisibility(View.GONE);
                        }
                    }


                    // moves the figure from one field to another
                    if (selectedField.equalsIgnoreCase("rook_black1")) {
                        rook_black1.setX(getDestinationX(nameOfField));
                        rook_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black1")) {
                        knight_black1.setX(getDestinationX(nameOfField));
                        knight_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black1")) {
                        bishop_black1.setX(getDestinationX(nameOfField));
                        bishop_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_black")) {
                        queen_black.setX(getDestinationX(nameOfField));
                        queen_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_black")) {
                        king_black.setX(getDestinationX(nameOfField));
                        king_black.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_black2")) {
                        bishop_black2.setX(getDestinationX(nameOfField));
                        bishop_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_black2")) {
                        knight_black2.setX(getDestinationX(nameOfField));
                        knight_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_black2")) {
                        rook_black2.setX(getDestinationX(nameOfField));
                        rook_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black1")) {
                        pawn_black1.setX(getDestinationX(nameOfField));
                        pawn_black1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black2")) {
                        pawn_black2.setX(getDestinationX(nameOfField));
                        pawn_black2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black3")) {
                        pawn_black3.setX(getDestinationX(nameOfField));
                        pawn_black3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black4")) {
                        pawn_black4.setX(getDestinationX(nameOfField));
                        pawn_black4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black5")) {
                        pawn_black5.setX(getDestinationX(nameOfField));
                        pawn_black5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black6")) {
                        pawn_black6.setX(getDestinationX(nameOfField));
                        pawn_black6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black7")) {
                        pawn_black7.setX(getDestinationX(nameOfField));
                        pawn_black7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_black8")) {
                        pawn_black8.setX(getDestinationX(nameOfField));
                        pawn_black8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white1")) {
                        pawn_white1.setX(getDestinationX(nameOfField));
                        pawn_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white2")) {
                        pawn_white2.setX(getDestinationX(nameOfField));
                        pawn_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white3")) {
                        pawn_white3.setX(getDestinationX(nameOfField));
                        pawn_white3.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white4")) {
                        pawn_white4.setX(getDestinationX(nameOfField));
                        pawn_white4.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white5")) {
                        pawn_white5.setX(getDestinationX(nameOfField));
                        pawn_white5.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white6")) {
                        pawn_white6.setX(getDestinationX(nameOfField));
                        pawn_white6.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white7")) {
                        pawn_white7.setX(getDestinationX(nameOfField));
                        pawn_white7.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("pawn_white8")) {
                        pawn_white8.setX(getDestinationX(nameOfField));
                        pawn_white8.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white1")) {
                        rook_white1.setX(getDestinationX(nameOfField));
                        rook_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white1")) {
                        knight_white1.setX(getDestinationX(nameOfField));
                        knight_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white1")) {
                        bishop_white1.setX(getDestinationX(nameOfField));
                        bishop_white1.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("queen_white")) {
                        queen_white.setX(getDestinationX(nameOfField));
                        queen_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("king_white")) {
                        king_white.setX(getDestinationX(nameOfField));
                        king_white.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("bishop_white2")) {
                        bishop_white2.setX(getDestinationX(nameOfField));
                        bishop_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("knight_white2")) {
                        knight_white2.setX(getDestinationX(nameOfField));
                        knight_white2.setY(getDestinationY(nameOfField));
                    } else if (selectedField.equalsIgnoreCase("rook_white2")) {
                        rook_white2.setX(getDestinationX(nameOfField));
                        rook_white2.setY(getDestinationY(nameOfField));
                    }

                    for (int i = 0; i < chessboard.length; i++) {
                        for (int j = 0; j < chessboard.length; j++) {
                            if (chessboard[i][j].equalsIgnoreCase(nameOfField)) {
                                if (i == 0 && j == 0) {
                                    b00.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 1) {
                                    b01.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 2) {
                                    b02.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 3) {
                                    b03.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 4) {
                                    b04.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 5) {
                                    b05.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 6) {
                                    b06.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 0 && j == 7) {
                                    b07.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 0) {
                                    b10.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 1) {
                                    b11.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 2) {
                                    b12.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 3) {
                                    b13.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 4) {
                                    b14.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 5) {
                                    b15.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 6) {
                                    b16.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 1 && j == 7) {
                                    b17.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 0) {
                                    b20.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 1) {
                                    b21.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 2) {
                                    b22.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 3) {
                                    b23.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 4) {
                                    b24.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 5) {
                                    b25.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 6) {
                                    b26.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 2 && j == 7) {
                                    b27.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 0) {
                                    b30.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 1) {
                                    b31.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 2) {
                                    b32.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 3) {
                                    b33.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 4) {
                                    b34.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 5) {
                                    b35.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 6) {
                                    b36.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 3 && j == 7) {
                                    b37.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 0) {
                                    b40.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 1) {
                                    b41.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 2) {
                                    b42.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 3) {
                                    b43.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 4) {
                                    b44.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 5) {
                                    b45.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 6) {
                                    b46.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 4 && j == 7) {
                                    b47.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 0) {
                                    b50.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 1) {
                                    b51.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 2) {
                                    b52.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 3) {
                                    b53.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 4) {
                                    b54.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 5) {
                                    b55.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 6) {
                                    b56.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 5 && j == 7) {
                                    b57.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 0) {
                                    b60.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 1) {
                                    b61.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 2) {
                                    b62.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 3) {
                                    b63.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 4) {
                                    b64.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 5) {
                                    b65.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 6) {
                                    b66.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 6 && j == 7) {
                                    b67.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 0) {
                                    b70.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 1) {
                                    b71.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 2) {
                                    b72.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 3) {
                                    b73.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 4) {
                                    b74.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 5) {
                                    b75.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 6) {
                                    b76.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                } else if (i == 7 && j == 7) {
                                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));
                                }

                                chessboard[i][j] = selectedField;
                            } else if (chessboard[i][j].equalsIgnoreCase(selectedField)) {
                                String newName = "" + i + j;

                                chessboard[i][j] = newName;
                            }
                        }
                    }

                    // checks if the game is over by looking up the kings
                    if (isGameOver())
                    {
                        // gets the player who won and displays a win message
                        String victorious = getWinner();

                        // showWinner(victorious);
                        if (victorious.equalsIgnoreCase("king_white")) {
                            win_white.setVisibility(View.VISIBLE);
                        } else if (victorious.equalsIgnoreCase("king_black")) {
                            win_black.setVisibility(View.VISIBLE);
                        }

                        b00.setClickable(false);
                        b01.setClickable(false);
                        b02.setClickable(false);
                        b03.setClickable(false);
                        b04.setClickable(false);
                        b05.setClickable(false);
                        b06.setClickable(false);
                        b07.setClickable(false);
                        b10.setClickable(false);
                        b11.setClickable(false);
                        b12.setClickable(false);
                        b13.setClickable(false);
                        b14.setClickable(false);
                        b15.setClickable(false);
                        b16.setClickable(false);
                        b17.setClickable(false);
                        b20.setClickable(false);
                        b21.setClickable(false);
                        b22.setClickable(false);
                        b23.setClickable(false);
                        b24.setClickable(false);
                        b25.setClickable(false);
                        b26.setClickable(false);
                        b27.setClickable(false);
                        b30.setClickable(false);
                        b31.setClickable(false);
                        b32.setClickable(false);
                        b33.setClickable(false);
                        b34.setClickable(false);
                        b35.setClickable(false);
                        b36.setClickable(false);
                        b37.setClickable(false);
                        b40.setClickable(false);
                        b41.setClickable(false);
                        b42.setClickable(false);
                        b43.setClickable(false);
                        b44.setClickable(false);
                        b45.setClickable(false);
                        b46.setClickable(false);
                        b47.setClickable(false);
                        b50.setClickable(false);
                        b51.setClickable(false);
                        b52.setClickable(false);
                        b53.setClickable(false);
                        b54.setClickable(false);
                        b55.setClickable(false);
                        b56.setClickable(false);
                        b57.setClickable(false);
                        b60.setClickable(false);
                        b61.setClickable(false);
                        b62.setClickable(false);
                        b63.setClickable(false);
                        b64.setClickable(false);
                        b65.setClickable(false);
                        b66.setClickable(false);
                        b67.setClickable(false);
                        b70.setClickable(false);
                        b71.setClickable(false);
                        b72.setClickable(false);
                        b73.setClickable(false);
                        b74.setClickable(false);
                        b75.setClickable(false);
                        b76.setClickable(false);
                        b77.setClickable(false);
                    }

                    // marks that a new turn can start
                    selectionStage = 0;
                    switchTurns();

                    // increments the turns
                    turns++;
                }
                // when the player wants to choose an other figure to move
                else if ((selectionStage == 1) && validSelection(nameOfField))
                {
                    // the previous turn is done so all fields must not be highlighted green again
                    b00.setBackgroundColor(Color.parseColor("#00000000"));
                    b01.setBackgroundColor(Color.parseColor("#00000000"));
                    b02.setBackgroundColor(Color.parseColor("#00000000"));
                    b03.setBackgroundColor(Color.parseColor("#00000000"));
                    b04.setBackgroundColor(Color.parseColor("#00000000"));
                    b05.setBackgroundColor(Color.parseColor("#00000000"));
                    b06.setBackgroundColor(Color.parseColor("#00000000"));
                    b07.setBackgroundColor(Color.parseColor("#00000000"));
                    b10.setBackgroundColor(Color.parseColor("#00000000"));
                    b11.setBackgroundColor(Color.parseColor("#00000000"));
                    b12.setBackgroundColor(Color.parseColor("#00000000"));
                    b13.setBackgroundColor(Color.parseColor("#00000000"));
                    b14.setBackgroundColor(Color.parseColor("#00000000"));
                    b15.setBackgroundColor(Color.parseColor("#00000000"));
                    b16.setBackgroundColor(Color.parseColor("#00000000"));
                    b17.setBackgroundColor(Color.parseColor("#00000000"));
                    b20.setBackgroundColor(Color.parseColor("#00000000"));
                    b21.setBackgroundColor(Color.parseColor("#00000000"));
                    b22.setBackgroundColor(Color.parseColor("#00000000"));
                    b23.setBackgroundColor(Color.parseColor("#00000000"));
                    b24.setBackgroundColor(Color.parseColor("#00000000"));
                    b25.setBackgroundColor(Color.parseColor("#00000000"));
                    b26.setBackgroundColor(Color.parseColor("#00000000"));
                    b27.setBackgroundColor(Color.parseColor("#00000000"));
                    b30.setBackgroundColor(Color.parseColor("#00000000"));
                    b31.setBackgroundColor(Color.parseColor("#00000000"));
                    b32.setBackgroundColor(Color.parseColor("#00000000"));
                    b33.setBackgroundColor(Color.parseColor("#00000000"));
                    b34.setBackgroundColor(Color.parseColor("#00000000"));
                    b35.setBackgroundColor(Color.parseColor("#00000000"));
                    b36.setBackgroundColor(Color.parseColor("#00000000"));
                    b37.setBackgroundColor(Color.parseColor("#00000000"));
                    b40.setBackgroundColor(Color.parseColor("#00000000"));
                    b41.setBackgroundColor(Color.parseColor("#00000000"));
                    b42.setBackgroundColor(Color.parseColor("#00000000"));
                    b43.setBackgroundColor(Color.parseColor("#00000000"));
                    b44.setBackgroundColor(Color.parseColor("#00000000"));
                    b45.setBackgroundColor(Color.parseColor("#00000000"));
                    b46.setBackgroundColor(Color.parseColor("#00000000"));
                    b47.setBackgroundColor(Color.parseColor("#00000000"));
                    b50.setBackgroundColor(Color.parseColor("#00000000"));
                    b51.setBackgroundColor(Color.parseColor("#00000000"));
                    b52.setBackgroundColor(Color.parseColor("#00000000"));
                    b53.setBackgroundColor(Color.parseColor("#00000000"));
                    b54.setBackgroundColor(Color.parseColor("#00000000"));
                    b55.setBackgroundColor(Color.parseColor("#00000000"));
                    b56.setBackgroundColor(Color.parseColor("#00000000"));
                    b57.setBackgroundColor(Color.parseColor("#00000000"));
                    b60.setBackgroundColor(Color.parseColor("#00000000"));
                    b61.setBackgroundColor(Color.parseColor("#00000000"));
                    b62.setBackgroundColor(Color.parseColor("#00000000"));
                    b63.setBackgroundColor(Color.parseColor("#00000000"));
                    b64.setBackgroundColor(Color.parseColor("#00000000"));
                    b65.setBackgroundColor(Color.parseColor("#00000000"));
                    b66.setBackgroundColor(Color.parseColor("#00000000"));
                    b67.setBackgroundColor(Color.parseColor("#00000000"));
                    b70.setBackgroundColor(Color.parseColor("#00000000"));
                    b71.setBackgroundColor(Color.parseColor("#00000000"));
                    b72.setBackgroundColor(Color.parseColor("#00000000"));
                    b73.setBackgroundColor(Color.parseColor("#00000000"));
                    b74.setBackgroundColor(Color.parseColor("#00000000"));
                    b75.setBackgroundColor(Color.parseColor("#00000000"));
                    b76.setBackgroundColor(Color.parseColor("#00000000"));
                    b77.setBackgroundColor(Color.parseColor("#00000000"));

                    // the background is turned light green and the selected field is stored
                    b77.setBackgroundColor(Color.parseColor("#A9B3FC86"));

                    selectedField = nameOfField;
                    selectionStage = 1;
                }
                // when the selected field isn't a valid option
                else {
                    error_message.setVisibility(View.VISIBLE);
                }
            }
        });

    }

    public void buttonBack(View view) {
        // creating a new intent
        Intent intent = new Intent(gameActivity.this, MainActivity.class);

        // resetting some values
        turns = 0;
        playersTurn = "white";
        selectedField = "";

        // switching to the MainActivity
        gameActivity.this.startActivity(intent);
    }

    public void buttonClickGameRules(View view) {
        Uri uri = Uri.parse("https://www.officialgamerules.org/chess");
        Intent intent = new Intent(Intent.ACTION_VIEW, uri);
        startActivity(intent);
    }
}